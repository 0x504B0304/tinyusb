name: Hardware Test
on:
  workflow_dispatch:

# Hardware in the loop (HIL)
# Current self-hosted instance is running on an RPI4 with
# - pico + pico-probe connected via USB
# - pico-probe is /dev/ttyACM0

jobs:
  hw-test:
    # Limit the run to only hathach due to limited resource on RPI4
    if: github.repository_owner == 'hathach'
    runs-on: [self-hosted, Linux, ARM64]

    steps:
    - name: Clean workspace
      run: |
        echo "Cleaning up previous run"
        rm -rf "${{ github.workspace }}"
        mkdir -p "${{ github.workspace }}"

    - name: Download rp2040 Artifacts
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: build_arm.yml
        name: rp2040

    - name: Create flash.sh
      run: |
        touch flash.sh
        chmod +x flash.sh
        echo > flash.sh 'openocd -f "interface/picoprobe.cfg" -f "target/rp2040.cfg" -c "program $1.elf reset exit"'

    - name: Test cdc_dual_ports
      run: |
        ./flash.sh cdc_dual_ports
        while (! ([ -e /dev/ttyACM1 ] && [ -e /dev/ttyACM2 ])) && [ $SECONDS -le 5 ]; do :; done
        test -e /dev/ttyACM1 && echo "ttyACM1 exists"
        test -e /dev/ttyACM2 && echo "ttyACM2 exists"

    - name: Test cdc_msc
      run: |
        ./flash.sh cdc_msc
        readme='/media/pi/TinyUSB MSC/README.TXT'
        while (! ([ -e /dev/ttyACM1 ] && [ -f "$readme" ])) && [ $SECONDS -le 5 ]; do :; done
        test -e /dev/ttyACM1 && echo "ttyACM1 exists"
        test -f "$readme" && echo "$readme exists"
        cat "$readme"

    - name: Test dfu
      run: |
        ./flash.sh dfu
        while (! (dfu-util -l | grep "Found DFU")) && [ $SECONDS -le 5 ]; do :; done
        dfu-util -d cafe -a 0 -U dfu0
        dfu-util -d cafe -a 1 -U dfu1
        grep "TinyUSB DFU! - Partition 0" dfu0
        grep "TinyUSB DFU! - Partition 1" dfu1

    - name: Test dfu
      run: |
        ./flash.sh dfu_runtime
        while (! (dfu-util -l | grep "Found Runtime")) && [ $SECONDS -le 5 ]; do :; done
